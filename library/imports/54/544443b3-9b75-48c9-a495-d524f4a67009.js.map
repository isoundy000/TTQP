{"version":3,"sources":["../../../../../../assets/Script/HomeScript/HomeToolJS/assets/Script/HomeScript/HomeToolJS/HomeNodePool.js"],"names":["window","HPool","initObjPool","obj","poolName","cc","NodePool","onCreateItem","pool","prefab","nodeParent","newNode","size","get","instantiate","addChild","onRecyclingNodeToPool","node","put","onClearPool","clear"],"mappings":";;;;;;AAAAA,OAAOC,KAAP,GAAe;;AAEX;;;;;AAKAC,eAPW,uBAOCC,GAPD,EAOMC,QAPN,EAOgB;AACvBD,YAAIC,QAAJ,IAAgB,IAAIC,GAAGC,QAAP,EAAhB;AACH,KATU;;;AAWX;;;;;;AAMAC,gBAjBW,wBAiBEC,IAjBF,EAiBQC,MAjBR,EAiBgBC,UAjBhB,EAiB4B;AACnC,YAAIC,UAAU,IAAd;AACA,YAAIH,KAAKI,IAAL,KAAc,CAAlB,EAAqB;AACjBD,sBAAUH,KAAKK,GAAL,EAAV;AACH,SAFD,MAEO;AACHF,sBAAUN,GAAGS,WAAH,CAAeL,MAAf,CAAV;AACH;AACDC,mBAAWK,QAAX,CAAoBJ,OAApB;AACA,eAAOA,OAAP;AACH,KA1BU;;;AA4BX;;;;;;AAMAK,yBAlCW,iCAkCWb,GAlCX,EAkCgBC,QAlChB,EAkC0Ba,IAlC1B,EAkCgC;AACvCd,YAAIC,QAAJ,EAAcc,GAAd,CAAkBD,IAAlB;AACH,KApCU;;;AAsCX;;;;;;AAMAE,eA5CW,uBA4CChB,GA5CD,EA4CMC,QA5CN,EA4CgB;AACvBD,YAAIC,QAAJ,EAAcgB,KAAd;AACH;AA9CU,CAAf","file":"HomeNodePool.js","sourceRoot":"../../../../../../assets/Script/HomeScript/HomeToolJS","sourcesContent":["window.HPool = {\n\n    /**\n     * 初始化对象池\n     * @param {需要创建节点池的类} obj \n     * @param {节点池的名称，注意，要唯一性}} poolName \n     */\n    initObjPool(obj, poolName) {\n        obj[poolName] = new cc.NodePool();\n    },\n\n    /**\n     * 创建控件\n     * @param {*} pool 当前类的释放吃\n     * @param {*} prefab 要创建的控件\n     * @param {*} nodeParent 父节点\n     */\n    onCreateItem(pool, prefab, nodeParent) {\n        let newNode = null;\n        if (pool.size() > 0) {\n            newNode = pool.get();\n        } else {\n            newNode = cc.instantiate(prefab);\n        }\n        nodeParent.addChild(newNode);\n        return newNode;\n    },\n\n    /**\n     * 回收节点\n     * @param {*} obj 当前类的对象\n     * @param {*} poolName 当前类的节点名称\n     * @param {*} node 要回收的节点\n     */\n    onRecyclingNodeToPool(obj, poolName, node) {\n        obj[poolName].put(node);\n    },\n\n    /**\n     * 清空节点池\n     * @param {*} obj 当前类的对象\n     * @param {*} poolName 当前类的节点名称\n     * @param {*} node 要回收的节点\n     */\n    onClearPool(obj, poolName) {\n        obj[poolName].clear();\n    },\n\n\n};"]}